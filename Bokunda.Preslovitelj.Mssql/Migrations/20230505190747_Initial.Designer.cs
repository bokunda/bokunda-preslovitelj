// <auto-generated />
using System;
using Bokunda.Preslovitelj.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bokunda.Preslovitelj.Mssql.Migrations
{
    [DbContext(typeof(PresloviteljContext))]
    [Migration("20230505190747_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bokunda.Preslovitelj.Domain.TranslationRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("TranslationRequests");
                });

            modelBuilder.Entity("Bokunda.Preslovitelj.Domain.TranslationResponse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TranslationRequestId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("TranslationRequestId")
                        .IsUnique();

                    b.ToTable("TranslationResponses");
                });

            modelBuilder.Entity("Bokunda.Preslovitelj.Domain.TranslationResponse", b =>
                {
                    b.HasOne("Bokunda.Preslovitelj.Domain.TranslationRequest", "TranslationRequest")
                        .WithOne("TranslationResponse")
                        .HasForeignKey("Bokunda.Preslovitelj.Domain.TranslationResponse", "TranslationRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TranslationRequest");
                });

            modelBuilder.Entity("Bokunda.Preslovitelj.Domain.TranslationRequest", b =>
                {
                    b.Navigation("TranslationResponse")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
